import logging
import os
from typing import Optional

<<<<<<< HEAD
<<<<<<< HEAD
from pip._vendor.pyproject_hooks import BuildBackendHookCaller, HookMissing
=======
from pip._vendor.pep517.wrappers import HookMissing, Pep517HookCaller
>>>>>>> df325ab2fd198d525717375d770d9aa54a62e81d
=======
from pip._vendor.pep517.wrappers import HookMissing, Pep517HookCaller
=======
from pip._vendor.pyproject_hooks import BuildBackendHookCaller, HookMissing
>>>>>>> 69cfeeef2f976b4d42eb26221f042bd52a00e559
>>>>>>> b7b1c37ba3a9c0a368c733e0bda45eee6e08b936

from pip._internal.utils.subprocess import runner_with_spinner_message

logger = logging.getLogger(__name__)


def build_wheel_editable(
    name: str,
<<<<<<< HEAD
<<<<<<< HEAD
    backend: BuildBackendHookCaller,
=======
    backend: Pep517HookCaller,
>>>>>>> df325ab2fd198d525717375d770d9aa54a62e81d
=======
    backend: Pep517HookCaller,
=======
    backend: BuildBackendHookCaller,
>>>>>>> 69cfeeef2f976b4d42eb26221f042bd52a00e559
>>>>>>> b7b1c37ba3a9c0a368c733e0bda45eee6e08b936
    metadata_directory: str,
    tempd: str,
) -> Optional[str]:
    """Build one InstallRequirement using the PEP 660 build process.

    Returns path to wheel if successfully built. Otherwise, returns None.
    """
    assert metadata_directory is not None
    try:
        logger.debug("Destination directory: %s", tempd)

        runner = runner_with_spinner_message(
            f"Building editable for {name} (pyproject.toml)"
        )
        with backend.subprocess_runner(runner):
            try:
                wheel_name = backend.build_editable(
                    tempd,
                    metadata_directory=metadata_directory,
                )
            except HookMissing as e:
                logger.error(
                    "Cannot build editable %s because the build "
                    "backend does not have the %s hook",
                    name,
                    e,
                )
                return None
    except Exception:
        logger.error("Failed building editable for %s", name)
        return None
    return os.path.join(tempd, wheel_name)
